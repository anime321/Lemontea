@using Lemontea.Shared.Models.Dto;
@model AziendaDto

<div style="margin-top: 10px; margin-bottom: 10px">
  @(Html.Kendo().Button()
  .Name("goBackButton")
  .Content("Indietro")
  .Events(config =>
  {
    if (Model != null)
    {
      config.Click("backToAziendaDettaglio");
    }
    else
    {
      config.Click("backToAziendaIndex");
    }
  })
  )
</div>

<script>
  function getSelectedCountry() {
    return $("#Nazione").val();
  }
  function backToAziendaDettaglio(e) {
    window.location.href = "@Url.Action("DettaglioAzienda", "Azienda", Model)";
  }
  function backToAziendaIndex(e) {
    window.location.href = "@Url.Action("Index", "Azienda")";
  }
</script>

@* we use ajax and call preventDefault() on the form's event so the following action params are unnecessary*@
@using (Html.BeginForm(Model != null ? "EditAzienda" : "SaveAzienda", "Azienda", FormMethod.Post, new { id = "azienda_form" }))
{
  @Html.AntiForgeryToken()

  @Html.ValidationSummary(true, "", new { @class = "text-danger" })

  @if (Model != null && Model.Id != 0)
  {
    <script>
      var editingAzienda = true;
    </script>

    @Html.HiddenFor(model => model.Id);
  }
  else
  {
    <script>
      var editingAzienda = false;
    </script>
  }

  <div class="form-group" row col>
    @Html.LabelFor(model => model.RagioneSociale, "Ragione sociale")
    @Html.EditorFor(model => model.RagioneSociale, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.RagioneSociale, "", new { @class = "text-danger" })
  </div>

  <div class="row">
    <div class="form-group col-8">
      @Html.LabelFor(model => model.Indirizzo, "Indirizzo")
      @Html.EditorFor(model => model.Indirizzo, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Indirizzo, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-2">
      @Html.LabelFor(model => model.NCivico, "N° civico")
      @Html.EditorFor(model => model.NCivico, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.NCivico, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-2">
      @Html.LabelFor(model => model.CAP, "CAP")
      @Html.EditorFor(model => model.CAP, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.CAP, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="row">
    <div class="form-group col">
      @Html.LabelFor(model => model.Nazione, "Nazione")
      @(Html.Kendo().DropDownListFor(m => m.Nazione)
      .DataTextField("countryName")
      .DataValueField("alpha2Code")
      .OptionLabel("Select country...")
      .HtmlAttributes(new { @class = "form-control" })
      .DataSource(source =>
      {
        source.Read(read =>
        {
          read.Action("Get_Countries", "Country");
        })
        .ServerFiltering(false);
      })
      )

    </div>
    <div class="form-group col">
      @Html.LabelFor(model => model.Provincia, "Provincia")
      @(Html.Kendo().DropDownListFor(m => m.Provincia)
      .DataTextField("stateName")
      .DataValueField("alpha2Code")
      .OptionLabel("Select state...")
      .HtmlAttributes(new { @class = "form-control" })
      .DataSource(source =>
      {
        source.Read(read =>
        {
          read.Action("Get_StatesByCountry", "Country").Data("getSelectedCountry");
        })
        .ServerFiltering(true);
      })
      //.Enable(false)
      .AutoBind(false)
      .CascadeFrom("Nazione")
      )
    </div>
    <div class="form-group col">
      @Html.LabelFor(model => model.Citta, "Città")
      @Html.EditorFor(model => model.Citta, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Citta, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="row">
    <div class="form-group col">

      @Html.LabelFor(model => model.Telefono, "Telefono")
      @(Html.Kendo().MultiColumnComboBoxFor(m => m.Telefono)
        .Placeholder("Telefono")
        .DataTextField("phoneCode")
        .DataValueField("alpha2Code")
        .DropDownWidth("100px")
        .HtmlAttributes(new { @class = "form-control" })
        .Columns(columns =>
        {
          columns.Add().Field("phoneCode").Title("Prefisso").Width("80px");
          columns.Add().Field("countryName").Title("Nazione").Width("200px");
        })
        .Filter(FilterType.Contains)
        .FilterFields(new string[]
        {
            "countryName",
            "phoneCode"
          })
        .DataSource(source =>
        {
          source.Read(read =>
          {
            read.Action("Get_Countries", "Country");
          })
          .ServerFiltering(false);
        })
      )

    </div>
    <div class="form-group col">
      @Html.LabelFor(model => model.Fax, "Fax")
      @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col">
      @Html.LabelFor(model => model.Email, "Email aziendale")
      @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="row">
    <div class="form-group col-4">
      @Html.LabelFor(model => model.SitoWeb, "Sito Web")
      @Html.EditorFor(model => model.SitoWeb, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.SitoWeb, "", new { @class = "text-danger" })
    </div>
  </div>


  <div class="row">
    <div class="form-group col-4">
      @Html.LabelFor(model => model.PartitaIVA, "Partita IVA")
      @Html.EditorFor(model => model.PartitaIVA, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.PartitaIVA, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-4">
      @Html.LabelFor(model => model.CodiceFiscale, "Codice fiscale")
      @Html.EditorFor(model => model.CodiceFiscale, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.CodiceFiscale, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="row">
    <div class="form-group col">
      @Html.Label("Categorie")
      <div id="categorie_checkbox"></div>
    </div>
  </div>

  <div class="row col">
    <button type="submit" id="submit_button" class="btn btn-primary">Save</button>
  </div>
}

@section Scripts {
  @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

  <script type="text/javascript">
    $(document).ready(() => {
      // render categorie checkbox partial
      $.ajax({
        url: '/Category/CategoriesCheckBoxes',
        method: 'GET',
        success: data => {
          $('#categorie_checkbox').html(data);

          @*if (editingAzienda) {
            @foreach (var c in Model.Categorie)
            {
              @:$('#categorie_checkbox_@c.Id').prop('checked', true);
            }
          }*@
        }
      })
    });

    function getSelectedCountry() {
      return {
        alpha2Code: $("#Nazione").val().toString()
      };
    }

    //$("#Nazione").change(e => {
    //  $("#Provincia").data('kendoDropDownList').refresh();
    //});

    $('#azienda_form').submit(e => {
      e.preventDefault();

      // check all form data for validity before making any calls
      if (!$('#azienda_form').valid())
        return;

      $.ajax({
        url: editingAzienda ? '/Azienda/EditAzienda' : '/Azienda/SaveAzienda',
        method: editingAzienda ? 'PUT' : 'POST',
        data: $('#azienda_form').serialize(),
        success: data => {
          @*window.location = '@Url.Action("DettaglioAzienda", "Azienda", Model)';*@
          window.location = '@Url.Action("Index", "Azienda")';
        }
      });
    });
  </script>
}


